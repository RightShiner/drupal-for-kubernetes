{
    "_links": {
        "self": {
            "href": "http:\/\/default\/wiki\/benchmarks\/drupal?_format=hal_json"
        },
        "type": {
            "href": "http:\/\/drupal.org\/rest\/type\/node\/page"
        },
        "http:\/\/drupal.org\/rest\/relation\/node\/page\/revision_uid": [
            {
                "href": "http:\/\/default\/user\/2?_format=hal_json"
            }
        ],
        "http:\/\/drupal.org\/rest\/relation\/node\/page\/uid": [
            {
                "href": "http:\/\/default\/user\/2?_format=hal_json",
                "lang": "en"
            }
        ]
    },
    "nid": [
        {
            "value": 25
        }
    ],
    "uuid": [
        {
            "value": "0e2d2f10-3f5b-4b18-9d32-648e1a6e29ef"
        }
    ],
    "vid": [
        {
            "value": 25
        }
    ],
    "langcode": [
        {
            "value": "en",
            "lang": "en"
        }
    ],
    "type": [
        {
            "target_id": "page"
        }
    ],
    "revision_timestamp": [
        {
            "value": "2019-02-12T04:46:19+00:00",
            "format": "Y-m-d\\TH:i:sP"
        }
    ],
    "_embedded": {
        "http:\/\/drupal.org\/rest\/relation\/node\/page\/revision_uid": [
            {
                "_links": {
                    "self": {
                        "href": "http:\/\/default\/user\/2?_format=hal_json"
                    },
                    "type": {
                        "href": "http:\/\/drupal.org\/rest\/type\/user\/user"
                    }
                },
                "uuid": [
                    {
                        "value": "72a32381-22fe-4944-ab85-0b45a51f8631"
                    }
                ]
            }
        ],
        "http:\/\/drupal.org\/rest\/relation\/node\/page\/uid": [
            {
                "_links": {
                    "self": {
                        "href": "http:\/\/default\/user\/2?_format=hal_json"
                    },
                    "type": {
                        "href": "http:\/\/drupal.org\/rest\/type\/user\/user"
                    }
                },
                "uuid": [
                    {
                        "value": "72a32381-22fe-4944-ab85-0b45a51f8631"
                    }
                ],
                "lang": "en"
            }
        ]
    },
    "status": [
        {
            "value": true,
            "lang": "en"
        }
    ],
    "title": [
        {
            "value": "Drupal Benchmarks",
            "lang": "en"
        }
    ],
    "created": [
        {
            "value": "2016-02-06T04:44:15+00:00",
            "lang": "en",
            "format": "Y-m-d\\TH:i:sP"
        }
    ],
    "changed": [
        {
            "value": "2019-02-12T04:46:19+00:00",
            "lang": "en",
            "format": "Y-m-d\\TH:i:sP"
        }
    ],
    "promote": [
        {
            "value": false,
            "lang": "en"
        }
    ],
    "sticky": [
        {
            "value": false,
            "lang": "en"
        }
    ],
    "default_langcode": [
        {
            "value": true,
            "lang": "en"
        }
    ],
    "revision_translation_affected": [
        {
            "value": true,
            "lang": "en"
        }
    ],
    "path": [
        {
            "alias": "\/wiki\/benchmarks\/drupal",
            "pid": 25,
            "langcode": "en",
            "lang": "en"
        }
    ],
    "body": [
        {
            "value": "<p>Unless otherwise stated, the benchmarks were run using <strong>Drupal 8.0.5<\/strong>&nbsp;using the&nbsp;<strong>standard<\/strong>&nbsp;install profile. All benchmarks were run four times, with the first result discarded (to account for cache warming).<\/p>\r\n\r\n<h2 id=\"general-drupal-8-benchmarks\">Drupal 8 benchmarks<\/h2>\r\n\r\n<h3>Drupal 8 on Raspberry Pi model 3 cluster<\/h3>\r\n\r\n<table>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th>Drupal Version<\/th>\r\n\t\t\t<th>Notes<\/th>\r\n\t\t\t<th>Page<\/th>\r\n\t\t\t<th>Req\/s<\/th>\r\n\t\t<\/tr>\r\n\t<\/thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>8.1.1<\/td>\r\n\t\t\t<td>Standard profile, Nginx cached, Gigabit<\/td>\r\n\t\t\t<td><code>\/<\/code> page<\/td>\r\n\t\t\t<td>2630.80<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>8.1.1<\/td>\r\n\t\t\t<td>Standard profile, Nginx cached, 100 Mbps<\/td>\r\n\t\t\t<td><code>\/<\/code> page<\/td>\r\n\t\t\t<td>1274.14<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>8.1.1<\/td>\r\n\t\t\t<td>Standard profile, anonymous<\/td>\r\n\t\t\t<td><code>\/<\/code> page<\/td>\r\n\t\t\t<td>33.33<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>8.1.1<\/td>\r\n\t\t\t<td>Standard profile, authenticated<\/td>\r\n\t\t\t<td><code>\/<\/code> page<\/td>\r\n\t\t\t<td>11.28<\/td>\r\n\t\t<\/tr>\r\n\t<\/tbody>\r\n<\/table>\r\n\r\n<h3>Drupal 8 on Raspberry Pi model 2 Cluster<\/h3>\r\n\r\n<table>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th>Drupal Version<\/th>\r\n\t\t\t<th>Notes<\/th>\r\n\t\t\t<th>Page<\/th>\r\n\t\t\t<th>Req\/s<\/th>\r\n\t\t<\/tr>\r\n\t<\/thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>Standard profile, Nginx cached, Gigabit<\/td>\r\n\t\t\t<td><code>\/<\/code> page<\/td>\r\n\t\t\t<td>3163.00<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>Standard profile, anonymous<\/td>\r\n\t\t\t<td><code>\/<\/code> page<\/td>\r\n\t\t\t<td>33.60<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>Standard profile, authenticated<\/td>\r\n\t\t\t<td><code>\/<\/code> page<\/td>\r\n\t\t\t<td>8.47<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>8.1.0-beta1<\/td>\r\n\t\t\t<td>Standard profile, anonymous, BigPipe*<\/td>\r\n\t\t\t<td><code>\/<\/code> page<\/td>\r\n\t\t\t<td>33.09<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>8.1.0-beta1<\/td>\r\n\t\t\t<td>Standard profile, authenticated, BigPipe*<\/td>\r\n\t\t\t<td><code>\/<\/code> page<\/td>\r\n\t\t\t<td>7.93<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>Minimal profile, anonymous<\/td>\r\n\t\t\t<td><code>\/<\/code> page<\/td>\r\n\t\t\t<td>41.73<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>Minimal profile, authenticated<\/td>\r\n\t\t\t<td><code>\/<\/code> page<\/td>\r\n\t\t\t<td>32.60<\/td>\r\n\t\t<\/tr>\r\n\t<\/tbody>\r\n<\/table>\r\n\r\n<h3>Drupal 8 on Raspberry Pi Zero cluster<\/h3>\r\n\r\n<table>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th>Drupal Version<\/th>\r\n\t\t\t<th>Notes<\/th>\r\n\t\t\t<th>Page<\/th>\r\n\t\t\t<th>Req\/s<\/th>\r\n\t\t<\/tr>\r\n\t<\/thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>Standard profile, Nginx cached<\/td>\r\n\t\t\t<td><code>\/<\/code> page<\/td>\r\n\t\t\t<td>232.04<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>Standard profile, anonymous<\/td>\r\n\t\t\t<td><code>\/<\/code> page<\/td>\r\n\t\t\t<td>2.49<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>Standard profile, authenticated<\/td>\r\n\t\t\t<td><code>\/<\/code> page<\/td>\r\n\t\t\t<td>0.68<\/td>\r\n\t\t<\/tr>\r\n\t<\/tbody>\r\n<\/table>\r\n\r\n<ul>\r\n\t<li>Example benchmark used (non-auth requests):<br \/>\r\n\t<code>wrk -t4 -c48 -d10 http:\/\/www.pidramble.com\/?nocache=true<\/code><\/li>\r\n\t<li>Example benchmark used (authed requests):<br \/>\r\n\t<code>ab -n 750 -c 10 -C \"SESS1234=XYZ\" http:\/\/www.pidramble.com\/?nocache=true<\/code><\/li>\r\n<\/ul>\r\n\r\n<p>*BigPipe is typically used to increase perceived page load times, and can help in certain scenarios with scalability and per-request performance. I wanted to see what impact this module (and 8.1.0) have on Drupal 8 as a whole.<\/p>\r\n\r\n<h2 id=\"raspberry-pi-2-vs-macbook-air-vs-digitalocean\">Raspberry Pi&nbsp;vs MacBook Air vs DigitalOcean<\/h2>\r\n\r\n<p>I used the local Vagrant configuration in <code>testing\/vagrant<\/code>&nbsp;to bootstrap&nbsp;Dramble locally on a set of 6 VMs on my MacBook Air (1.7 Ghz i7 quad-core, 8GB RAM, Mac OS X 10.11.3), and&nbsp;the DO provisioning playbook in <code>testing\/digitalocean<\/code>&nbsp;to bootstrap Dramble on DigitalOcean\u2019s SSD-based cloud servers (1GB instances with 2 CPU cores, 30GB SSD, and Debian 8 x64).<\/p>\r\n\r\n<p>Here is the comparison for uncached page loads, using the standard install profile,&nbsp;Pi 2 vs. Pi 3 vs. MBA vs. DO:<\/p>\r\n\r\n<table>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th>Dramble location<\/th>\r\n\t\t\t<th>Requests\/second<\/th>\r\n\t\t<\/tr>\r\n\t<\/thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>Raspberry Pi 3<\/td>\r\n\t\t\t<td>11.28 (auth), 33.33 (anon)<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>Raspberry Pi 2<\/td>\r\n\t\t\t<td>8.47 (auth), 33.60 (anon)<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>MacBook Air i7<\/td>\r\n\t\t\t<td>22.10 (auth), 163.44 (anon)<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>DigitalOcean Droplets<\/td>\r\n\t\t\t<td>29.48 (auth), 344.82 (anon)<\/td>\r\n\t\t<\/tr>\r\n\t<\/tbody>\r\n<\/table>\r\n\r\n<p>I've previously&nbsp;run these tests in a configuration that used a more performance-oriented infrastructure architecture (4 Raspberry Pi webservers, a balancer, and a database server, instead of just 2 webservers). That&nbsp;configuration was focused more on performance than availability, but in that configuration,&nbsp;the Pi 2 cluster&nbsp;holds its own and is only about 50% slower than the&nbsp;DigitalOcean droplets.<\/p>\r\n\r\n<p>I'm excited to see how the Raspberry Pi 3 will do in this particular benchmark, with it's upgraded and faster-clocked&nbsp;64-bit CPU.<\/p>\r\n\r\n<h2 id=\"drupal-7-vs-drupal-8\">Drupal 7 vs Drupal 8<\/h2>\r\n\r\n<p>I\u2019m doing some testing of D7 vs D8 performance, but please note this <em>strong caveat<\/em>: Caching and performance metrics have changed a&nbsp;<em>lot<\/em>&nbsp;from D7 to D8; these tests were out-of-the-box Drupal installations with the standard profile, meaning Anonymous page caching in D7 wasn't enabled; with it enabled, Drupal 7's&nbsp;<em>anonymous<\/em>&nbsp;number on the Dramble jumps up to 291.92 requests\/second.<\/p>\r\n\r\n<p>Additionally, when using Nginx (or Varnish) as a reverse proxy, Drupal 7 and Drupal 8 will be more or less identical in terms of anonymous throughput, since Drupal\/PHP doesn't have to be touched at all.<\/p>\r\n\r\n<table>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th>Drupal version<\/th>\r\n\t\t\t<th>Environment<\/th>\r\n\t\t\t<th>Requests\/second<\/th>\r\n\t\t<\/tr>\r\n\t<\/thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>7.43<\/td>\r\n\t\t\t<td>Dramble (standard profile, anonymous home)<\/td>\r\n\t\t\t<td>63.65<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>7.43<\/td>\r\n\t\t\t<td>Dramble (standard profile, authenticated home)<\/td>\r\n\t\t\t<td>37.56<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>Dramble (standard profile, anonymous home)<\/td>\r\n\t\t\t<td>33.60<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>Dramble (standard profile, authenticated home)<\/td>\r\n\t\t\t<td>8.47<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>7\/8<\/td>\r\n\t\t\t<td>Dramble (cached via reverse proxy, anonymous home)<\/td>\r\n\t\t\t<td>3163.44<\/td>\r\n\t\t<\/tr>\r\n\t<\/tbody>\r\n<\/table>\r\n\r\n<p><strong>Benchmarks used<\/strong>:<\/p>\r\n\r\n<ul>\r\n\t<li><code>$ wrk -t4 -c48 -d10 http:\/\/www.pidramble.com\/<\/code> (anonymous).<\/li>\r\n\t<li><code>$ ab -n 750 -c 10 -C \"SESSxyz=XYZ\" http:\/\/www.pidramble.com\/?nocache=true<\/code> (authenticated as uid 1).<\/li>\r\n<\/ul>\r\n\r\n<h2 id=\"single-pi-drupal-8\">Single Raspberry Pi Drupal 8 benchmarks<\/h2>\r\n\r\n<p>You can easily install Drupal on a single Raspberry Pi using the <a href=\"https:\/\/github.com\/geerlingguy\/drupal-pi\">Drupal Pi<\/a> project; it's sometimes easier to get a quick performance overview with just one Pi, and it's always a little faster to experiment on the full LEMP stack running on a single Pi, though networking and clustering capabilities are rather hard to test :)<\/p>\r\n\r\n<table>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th>Pi<\/th>\r\n\t\t\t<th>Drupal version<\/th>\r\n\t\t\t<th>PHP Version<\/th>\r\n\t\t\t<th>Environment<\/th>\r\n\t\t\t<th>Requests\/second<\/th>\r\n\t\t<\/tr>\r\n\t<\/thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>3B<\/td>\r\n\t\t\t<td>7.43<\/td>\r\n\t\t\t<td>7.0.4<\/td>\r\n\t\t\t<td>Standard profile, anonymous home<\/td>\r\n\t\t\t<td>393.51<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>3B<\/td>\r\n\t\t\t<td>7.43<\/td>\r\n\t\t\t<td>7.0.4<\/td>\r\n\t\t\t<td>Standard profile, authenticated home<\/td>\r\n\t\t\t<td>52.02<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>3B+<\/td>\r\n\t\t\t<td>8.5.2<\/td>\r\n\t\t\t<td>7.0.27<\/td>\r\n\t\t\t<td>Standard profile, anonymous home<\/td>\r\n\t\t\t<td>149.00<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>3B+<\/td>\r\n\t\t\t<td>8.5.2<\/td>\r\n\t\t\t<td>7.0.27<\/td>\r\n\t\t\t<td>Standard profile, authenticated home<\/td>\r\n\t\t\t<td>15.32<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>3B<\/td>\r\n\t\t\t<td>8.5.2<\/td>\r\n\t\t\t<td>7.0.27<\/td>\r\n\t\t\t<td>Standard profile, anonymous home<\/td>\r\n\t\t\t<td>142.35<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>3B<\/td>\r\n\t\t\t<td>8.5.2<\/td>\r\n\t\t\t<td>7.0.27<\/td>\r\n\t\t\t<td>Standard profile, authenticated home<\/td>\r\n\t\t\t<td>14.49<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>2B<\/td>\r\n\t\t\t<td>8.5.2<\/td>\r\n\t\t\t<td>7.0.27<\/td>\r\n\t\t\t<td>Standard profile, anonymous home<\/td>\r\n\t\t\t<td>82.12<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>2B<\/td>\r\n\t\t\t<td>8.5.2<\/td>\r\n\t\t\t<td>7.0.27<\/td>\r\n\t\t\t<td>Standard profile, authenticated home<\/td>\r\n\t\t\t<td>8.05<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>3B<\/td>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>7.0.4<\/td>\r\n\t\t\t<td>Standard profile, anonymous home<\/td>\r\n\t\t\t<td>128.03<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>3B<\/td>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>7.0.4<\/td>\r\n\t\t\t<td>Standard profile, authenticated home<\/td>\r\n\t\t\t<td>12.02<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>3B<\/td>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>5.6.x<\/td>\r\n\t\t\t<td>Standard profile, anonymous home<\/td>\r\n\t\t\t<td>63.97<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>3B<\/td>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>5.6.x<\/td>\r\n\t\t\t<td>Standard profile, authenticated home<\/td>\r\n\t\t\t<td>4.87<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>2B<\/td>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>7.0.4<\/td>\r\n\t\t\t<td>Standard profile, anonymous home<\/td>\r\n\t\t\t<td>94.35<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>2B<\/td>\r\n\t\t\t<td>8.0.5<\/td>\r\n\t\t\t<td>7.0.4<\/td>\r\n\t\t\t<td>Standard profile, authenticated home<\/td>\r\n\t\t\t<td>8.61<\/td>\r\n\t\t<\/tr>\r\n\t<\/tbody>\r\n<\/table>\r\n\r\n<p><strong>Benchmarks used<\/strong>:<\/p>\r\n\r\n<ul>\r\n\t<li><code>$ wrk -t4 -c48 -d10 http:\/\/www.drupalpi.dev\/<\/code> (anonymous).<\/li>\r\n\t<li><code>$ ab -n 750 -c 10 -C \"SESSxyz=XYZ\" http:\/\/www.drupalpi.dev\/<\/code>&nbsp;(authenticated as uid 1).<\/li>\r\n<\/ul>\r\n\r\n<h2 id=\"mysql-benchmarks\">MySQL benchmarks<\/h2>\r\n\r\n<table>\r\n\t<thead>\r\n\t\t<tr>\r\n\t\t\t<th>MySQL DB Location<\/th>\r\n\t\t\t<th>Type of test<\/th>\r\n\t\t\t<th>Extra info<\/th>\r\n\t\t\t<th>Time or Req\/s<\/th>\r\n\t\t<\/tr>\r\n\t<\/thead>\r\n\t<tbody>\r\n\t\t<tr>\r\n\t\t\t<td>OWC Envoy USB SSD<\/td>\r\n\t\t\t<td>DB export<\/td>\r\n\t\t\t<td>4.5 MB<\/td>\r\n\t\t\t<td>0:02<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>OWC Envoy USB SSD<\/td>\r\n\t\t\t<td>DB import<\/td>\r\n\t\t\t<td>4.5 MB<\/td>\r\n\t\t\t<td>0:05<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>SanDisk Ultra Fit USB<\/td>\r\n\t\t\t<td>DB export<\/td>\r\n\t\t\t<td>4.5 MB<\/td>\r\n\t\t\t<td>0:03<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>SanDisk Ultra Fit USB<\/td>\r\n\t\t\t<td>DB import<\/td>\r\n\t\t\t<td>4.5 MB<\/td>\r\n\t\t\t<td>0:10<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>SanDisk Extreme microSD<\/td>\r\n\t\t\t<td>DB export<\/td>\r\n\t\t\t<td>4.5 MB<\/td>\r\n\t\t\t<td>0:03<\/td>\r\n\t\t<\/tr>\r\n\t\t<tr>\r\n\t\t\t<td>SanDisk Extreme microSD<\/td>\r\n\t\t\t<td>DB import<\/td>\r\n\t\t\t<td>4.5 MB<\/td>\r\n\t\t\t<td>0:10<\/td>\r\n\t\t<\/tr>\r\n\t<\/tbody>\r\n<\/table>\r\n\r\n<p>Importing and exporting databases aren't the most insane thing to attempt for MySQL benchmarking, but I was mostly trying to get a feel for any order-of-magnitude differences in disk I\/O with MySQL. I may run further database performance benchmarks at a later time to see how MySQL on the Pi handles different scenarios.<\/p>\r\n\r\n<h2 id=\"example-benchmarks\">Benchmark details<\/h2>\r\n\r\n<h3 id=\"cached-http-requests\">Cached HTTP requests<\/h3>\r\n\r\n<pre class=\"prettyprint\">\r\n<code class=\"hljs lasso\">wrk <span class=\"hljs-attribute\">-t4<\/span> <span class=\"hljs-attribute\">-c100<\/span> <span class=\"hljs-attribute\">-d30<\/span> http:<span class=\"hljs-comment\">\/\/www.pidramble.com\/<\/span>\r\nab <span class=\"hljs-attribute\">-n<\/span> <span class=\"hljs-number\">10000<\/span> <span class=\"hljs-attribute\">-c<\/span> <span class=\"hljs-number\">100<\/span> http:<span class=\"hljs-comment\">\/\/www.pidramble.com\/<\/span><\/code><\/pre>\r\n\r\n<p><strong>Rationale<\/strong>: Test the raw throughput of the Nginx reverse proxy. This test should only hit the first Pi, acting as a cache in front of the rest of the stack, and should just be a matter of Nginx serving as many requests per second as possible (typically 1,000+, but this depends mostly on the size of the page in question).<\/p>\r\n\r\n<p>This test does nothing to test the entire infrastructure, as, after the first request is cached by Nginx locally, all the rest of the requests are served from that local cache.<\/p>\r\n\r\n<p><strong>Current Bottleneck<\/strong>: Network I\/O. If you use a Gigabit adapter, you can push through as many requests\/sec that a ~200 Mbps connection can support. If you use the built-in Pi 2 LAN, you can get about 95 Mbps max.<\/p>\r\n\r\n<h3 id=\"uncached-http-requests\">Uncached HTTP requests<\/h3>\r\n\r\n<pre class=\"prettyprint\">\r\n<code class=\"hljs lasso\">wrk <span class=\"hljs-attribute\">-t4<\/span> <span class=\"hljs-attribute\">-c4<\/span> <span class=\"hljs-attribute\">-d10<\/span> http:<span class=\"hljs-comment\">\/\/pidramble.com\/?nocache=true<\/span>\r\nab <span class=\"hljs-attribute\">-n<\/span> <span class=\"hljs-number\">100<\/span> <span class=\"hljs-attribute\">-c<\/span> <span class=\"hljs-number\">10<\/span> http:<span class=\"hljs-comment\">\/\/pidramble.com\/?nocache=true<\/span><\/code><\/pre>\r\n\r\n<p><strong>Rationale<\/strong>: Test the full stack for typical uncached responses. Setting the URL parameter <code>nocache=true<\/code> flags the request as uncachable according to our Nginx proxy\/balancer configuration. Requests will be distributed to the backend webservers, which in turn will load some data from the MySQL database server.<\/p>\r\n\r\n<p><strong>Current Bottleneck<\/strong>: Pi 2 CPU (specifically PHP processes on the webservers). If you run this test, you\u2019ll notice that all the webserver Pis max out their CPU usage almost immediately. The other servers have a tiny bit of load, but nothing major. This is because Drupal 8 is (currently) a pretty CPU-heavy framework that requires a good deal of PHP processing for a standard request (even when using an opcode cache and retrieving data from Redis, which makes requests 10-15% faster than querying through MySQL).<\/p>\r\n\r\n<h3 id=\"authenticated-http-requests\">Authenticated HTTP requests<\/h3>\r\n\r\n<pre class=\"prettyprint\">\r\n<code class=\"hljs lasso\">ab <span class=\"hljs-attribute\">-n<\/span> <span class=\"hljs-number\">100<\/span> <span class=\"hljs-attribute\">-c<\/span> <span class=\"hljs-number\">10<\/span> <span class=\"hljs-attribute\">-C<\/span> <span class=\"hljs-string\">\"SESSxxxxxxxxxxx=xxxxxxxxxxxx\"<\/span> http:<span class=\"hljs-comment\">\/\/pidramble.com\/<\/span><\/code><\/pre>\r\n\r\n<p><strong>Rationale<\/strong>: This is the heaviest kind of request possible for a Drupal 8 site. Many sites don\u2019t have much authenticated traffic, but if your site does, every request goes through the full stack, and often results in some database writes, reads, potentially some caching layer updates, etc. In all my performance optimization, I was able to squeeze about 15-16 requests\/second with a 6 Pi cluster. This number should see a linear increase with the number of webservers added, until resource limits of the cache and database server are reached.<\/p>\r\n\r\n<p><strong>Current Bottleneck<\/strong>: CPU (see previous <em>Uncached HTTP requests<\/em> benchmark). However, depending on the modules enabled and functionality provided to authenticated users, the cache or database servers could see more activity. But that is not the current bottleneck with 6 Raspberry Pi 2 nodes.<\/p>\r\n",
            "format": "html",
            "processed": "<p>Unless otherwise stated, the benchmarks were run using <strong>Drupal 8.0.5<\/strong>\u00a0using the\u00a0<strong>standard<\/strong>\u00a0install profile. All benchmarks were run four times, with the first result discarded (to account for cache warming).<\/p>\n\n<h2 id=\"general-drupal-8-benchmarks\">Drupal 8 benchmarks<\/h2>\n\n<h3>Drupal 8 on Raspberry Pi model 3 cluster<\/h3>\n\n<table><thead><tr><th>Drupal Version<\/th>\n\t\t\t<th>Notes<\/th>\n\t\t\t<th>Page<\/th>\n\t\t\t<th>Req\/s<\/th>\n\t\t<\/tr><\/thead><tbody><tr><td>8.1.1<\/td>\n\t\t\t<td>Standard profile, Nginx cached, Gigabit<\/td>\n\t\t\t<td><code>\/<\/code> page<\/td>\n\t\t\t<td>2630.80<\/td>\n\t\t<\/tr><tr><td>8.1.1<\/td>\n\t\t\t<td>Standard profile, Nginx cached, 100 Mbps<\/td>\n\t\t\t<td><code>\/<\/code> page<\/td>\n\t\t\t<td>1274.14<\/td>\n\t\t<\/tr><tr><td>8.1.1<\/td>\n\t\t\t<td>Standard profile, anonymous<\/td>\n\t\t\t<td><code>\/<\/code> page<\/td>\n\t\t\t<td>33.33<\/td>\n\t\t<\/tr><tr><td>8.1.1<\/td>\n\t\t\t<td>Standard profile, authenticated<\/td>\n\t\t\t<td><code>\/<\/code> page<\/td>\n\t\t\t<td>11.28<\/td>\n\t\t<\/tr><\/tbody><\/table><h3>Drupal 8 on Raspberry Pi model 2 Cluster<\/h3>\n\n<table><thead><tr><th>Drupal Version<\/th>\n\t\t\t<th>Notes<\/th>\n\t\t\t<th>Page<\/th>\n\t\t\t<th>Req\/s<\/th>\n\t\t<\/tr><\/thead><tbody><tr><td>8.0.5<\/td>\n\t\t\t<td>Standard profile, Nginx cached, Gigabit<\/td>\n\t\t\t<td><code>\/<\/code> page<\/td>\n\t\t\t<td>3163.00<\/td>\n\t\t<\/tr><tr><td>8.0.5<\/td>\n\t\t\t<td>Standard profile, anonymous<\/td>\n\t\t\t<td><code>\/<\/code> page<\/td>\n\t\t\t<td>33.60<\/td>\n\t\t<\/tr><tr><td>8.0.5<\/td>\n\t\t\t<td>Standard profile, authenticated<\/td>\n\t\t\t<td><code>\/<\/code> page<\/td>\n\t\t\t<td>8.47<\/td>\n\t\t<\/tr><tr><td>8.1.0-beta1<\/td>\n\t\t\t<td>Standard profile, anonymous, BigPipe*<\/td>\n\t\t\t<td><code>\/<\/code> page<\/td>\n\t\t\t<td>33.09<\/td>\n\t\t<\/tr><tr><td>8.1.0-beta1<\/td>\n\t\t\t<td>Standard profile, authenticated, BigPipe*<\/td>\n\t\t\t<td><code>\/<\/code> page<\/td>\n\t\t\t<td>7.93<\/td>\n\t\t<\/tr><tr><td>8.0.5<\/td>\n\t\t\t<td>Minimal profile, anonymous<\/td>\n\t\t\t<td><code>\/<\/code> page<\/td>\n\t\t\t<td>41.73<\/td>\n\t\t<\/tr><tr><td>8.0.5<\/td>\n\t\t\t<td>Minimal profile, authenticated<\/td>\n\t\t\t<td><code>\/<\/code> page<\/td>\n\t\t\t<td>32.60<\/td>\n\t\t<\/tr><\/tbody><\/table><h3>Drupal 8 on Raspberry Pi Zero cluster<\/h3>\n\n<table><thead><tr><th>Drupal Version<\/th>\n\t\t\t<th>Notes<\/th>\n\t\t\t<th>Page<\/th>\n\t\t\t<th>Req\/s<\/th>\n\t\t<\/tr><\/thead><tbody><tr><td>8.0.5<\/td>\n\t\t\t<td>Standard profile, Nginx cached<\/td>\n\t\t\t<td><code>\/<\/code> page<\/td>\n\t\t\t<td>232.04<\/td>\n\t\t<\/tr><tr><td>8.0.5<\/td>\n\t\t\t<td>Standard profile, anonymous<\/td>\n\t\t\t<td><code>\/<\/code> page<\/td>\n\t\t\t<td>2.49<\/td>\n\t\t<\/tr><tr><td>8.0.5<\/td>\n\t\t\t<td>Standard profile, authenticated<\/td>\n\t\t\t<td><code>\/<\/code> page<\/td>\n\t\t\t<td>0.68<\/td>\n\t\t<\/tr><\/tbody><\/table><ul><li>Example benchmark used (non-auth requests):<br \/><code>wrk -t4 -c48 -d10 http:\/\/www.pidramble.com\/?nocache=true<\/code><\/li>\n\t<li>Example benchmark used (authed requests):<br \/><code>ab -n 750 -c 10 -C \"SESS1234=XYZ\" http:\/\/www.pidramble.com\/?nocache=true<\/code><\/li>\n<\/ul><p>*BigPipe is typically used to increase perceived page load times, and can help in certain scenarios with scalability and per-request performance. I wanted to see what impact this module (and 8.1.0) have on Drupal 8 as a whole.<\/p>\n\n<h2 id=\"raspberry-pi-2-vs-macbook-air-vs-digitalocean\">Raspberry Pi\u00a0vs MacBook Air vs DigitalOcean<\/h2>\n\n<p>I used the local Vagrant configuration in <code>testing\/vagrant<\/code>\u00a0to bootstrap\u00a0Dramble locally on a set of 6 VMs on my MacBook Air (1.7 Ghz i7 quad-core, 8GB RAM, Mac OS X 10.11.3), and\u00a0the DO provisioning playbook in <code>testing\/digitalocean<\/code>\u00a0to bootstrap Dramble on DigitalOcean\u2019s SSD-based cloud servers (1GB instances with 2 CPU cores, 30GB SSD, and Debian 8 x64).<\/p>\n\n<p>Here is the comparison for uncached page loads, using the standard install profile,\u00a0Pi 2 vs. Pi 3 vs. MBA vs. DO:<\/p>\n\n<table><thead><tr><th>Dramble location<\/th>\n\t\t\t<th>Requests\/second<\/th>\n\t\t<\/tr><\/thead><tbody><tr><td>Raspberry Pi 3<\/td>\n\t\t\t<td>11.28 (auth), 33.33 (anon)<\/td>\n\t\t<\/tr><tr><td>Raspberry Pi 2<\/td>\n\t\t\t<td>8.47 (auth), 33.60 (anon)<\/td>\n\t\t<\/tr><tr><td>MacBook Air i7<\/td>\n\t\t\t<td>22.10 (auth), 163.44 (anon)<\/td>\n\t\t<\/tr><tr><td>DigitalOcean Droplets<\/td>\n\t\t\t<td>29.48 (auth), 344.82 (anon)<\/td>\n\t\t<\/tr><\/tbody><\/table><p>I've previously\u00a0run these tests in a configuration that used a more performance-oriented infrastructure architecture (4 Raspberry Pi webservers, a balancer, and a database server, instead of just 2 webservers). That\u00a0configuration was focused more on performance than availability, but in that configuration,\u00a0the Pi 2 cluster\u00a0holds its own and is only about 50% slower than the\u00a0DigitalOcean droplets.<\/p>\n\n<p>I'm excited to see how the Raspberry Pi 3 will do in this particular benchmark, with it's upgraded and faster-clocked\u00a064-bit CPU.<\/p>\n\n<h2 id=\"drupal-7-vs-drupal-8\">Drupal 7 vs Drupal 8<\/h2>\n\n<p>I\u2019m doing some testing of D7 vs D8 performance, but please note this <em>strong caveat<\/em>: Caching and performance metrics have changed a\u00a0<em>lot<\/em>\u00a0from D7 to D8; these tests were out-of-the-box Drupal installations with the standard profile, meaning Anonymous page caching in D7 wasn't enabled; with it enabled, Drupal 7's\u00a0<em>anonymous<\/em>\u00a0number on the Dramble jumps up to 291.92 requests\/second.<\/p>\n\n<p>Additionally, when using Nginx (or Varnish) as a reverse proxy, Drupal 7 and Drupal 8 will be more or less identical in terms of anonymous throughput, since Drupal\/PHP doesn't have to be touched at all.<\/p>\n\n<table><thead><tr><th>Drupal version<\/th>\n\t\t\t<th>Environment<\/th>\n\t\t\t<th>Requests\/second<\/th>\n\t\t<\/tr><\/thead><tbody><tr><td>7.43<\/td>\n\t\t\t<td>Dramble (standard profile, anonymous home)<\/td>\n\t\t\t<td>63.65<\/td>\n\t\t<\/tr><tr><td>7.43<\/td>\n\t\t\t<td>Dramble (standard profile, authenticated home)<\/td>\n\t\t\t<td>37.56<\/td>\n\t\t<\/tr><tr><td>8.0.5<\/td>\n\t\t\t<td>Dramble (standard profile, anonymous home)<\/td>\n\t\t\t<td>33.60<\/td>\n\t\t<\/tr><tr><td>8.0.5<\/td>\n\t\t\t<td>Dramble (standard profile, authenticated home)<\/td>\n\t\t\t<td>8.47<\/td>\n\t\t<\/tr><tr><td>7\/8<\/td>\n\t\t\t<td>Dramble (cached via reverse proxy, anonymous home)<\/td>\n\t\t\t<td>3163.44<\/td>\n\t\t<\/tr><\/tbody><\/table><p><strong>Benchmarks used<\/strong>:<\/p>\n\n<ul><li><code>$ wrk -t4 -c48 -d10 http:\/\/www.pidramble.com\/<\/code> (anonymous).<\/li>\n\t<li><code>$ ab -n 750 -c 10 -C \"SESSxyz=XYZ\" http:\/\/www.pidramble.com\/?nocache=true<\/code> (authenticated as uid 1).<\/li>\n<\/ul><h2 id=\"single-pi-drupal-8\">Single Raspberry Pi Drupal 8 benchmarks<\/h2>\n\n<p>You can easily install Drupal on a single Raspberry Pi using the <a href=\"https:\/\/github.com\/geerlingguy\/drupal-pi\">Drupal Pi<\/a> project; it's sometimes easier to get a quick performance overview with just one Pi, and it's always a little faster to experiment on the full LEMP stack running on a single Pi, though networking and clustering capabilities are rather hard to test :)<\/p>\n\n<table><thead><tr><th>Pi<\/th>\n\t\t\t<th>Drupal version<\/th>\n\t\t\t<th>PHP Version<\/th>\n\t\t\t<th>Environment<\/th>\n\t\t\t<th>Requests\/second<\/th>\n\t\t<\/tr><\/thead><tbody><tr><td>3B<\/td>\n\t\t\t<td>7.43<\/td>\n\t\t\t<td>7.0.4<\/td>\n\t\t\t<td>Standard profile, anonymous home<\/td>\n\t\t\t<td>393.51<\/td>\n\t\t<\/tr><tr><td>3B<\/td>\n\t\t\t<td>7.43<\/td>\n\t\t\t<td>7.0.4<\/td>\n\t\t\t<td>Standard profile, authenticated home<\/td>\n\t\t\t<td>52.02<\/td>\n\t\t<\/tr><tr><td>3B+<\/td>\n\t\t\t<td>8.5.2<\/td>\n\t\t\t<td>7.0.27<\/td>\n\t\t\t<td>Standard profile, anonymous home<\/td>\n\t\t\t<td>149.00<\/td>\n\t\t<\/tr><tr><td>3B+<\/td>\n\t\t\t<td>8.5.2<\/td>\n\t\t\t<td>7.0.27<\/td>\n\t\t\t<td>Standard profile, authenticated home<\/td>\n\t\t\t<td>15.32<\/td>\n\t\t<\/tr><tr><td>3B<\/td>\n\t\t\t<td>8.5.2<\/td>\n\t\t\t<td>7.0.27<\/td>\n\t\t\t<td>Standard profile, anonymous home<\/td>\n\t\t\t<td>142.35<\/td>\n\t\t<\/tr><tr><td>3B<\/td>\n\t\t\t<td>8.5.2<\/td>\n\t\t\t<td>7.0.27<\/td>\n\t\t\t<td>Standard profile, authenticated home<\/td>\n\t\t\t<td>14.49<\/td>\n\t\t<\/tr><tr><td>2B<\/td>\n\t\t\t<td>8.5.2<\/td>\n\t\t\t<td>7.0.27<\/td>\n\t\t\t<td>Standard profile, anonymous home<\/td>\n\t\t\t<td>82.12<\/td>\n\t\t<\/tr><tr><td>2B<\/td>\n\t\t\t<td>8.5.2<\/td>\n\t\t\t<td>7.0.27<\/td>\n\t\t\t<td>Standard profile, authenticated home<\/td>\n\t\t\t<td>8.05<\/td>\n\t\t<\/tr><tr><td>3B<\/td>\n\t\t\t<td>8.0.5<\/td>\n\t\t\t<td>7.0.4<\/td>\n\t\t\t<td>Standard profile, anonymous home<\/td>\n\t\t\t<td>128.03<\/td>\n\t\t<\/tr><tr><td>3B<\/td>\n\t\t\t<td>8.0.5<\/td>\n\t\t\t<td>7.0.4<\/td>\n\t\t\t<td>Standard profile, authenticated home<\/td>\n\t\t\t<td>12.02<\/td>\n\t\t<\/tr><tr><td>3B<\/td>\n\t\t\t<td>8.0.5<\/td>\n\t\t\t<td>5.6.x<\/td>\n\t\t\t<td>Standard profile, anonymous home<\/td>\n\t\t\t<td>63.97<\/td>\n\t\t<\/tr><tr><td>3B<\/td>\n\t\t\t<td>8.0.5<\/td>\n\t\t\t<td>5.6.x<\/td>\n\t\t\t<td>Standard profile, authenticated home<\/td>\n\t\t\t<td>4.87<\/td>\n\t\t<\/tr><tr><td>2B<\/td>\n\t\t\t<td>8.0.5<\/td>\n\t\t\t<td>7.0.4<\/td>\n\t\t\t<td>Standard profile, anonymous home<\/td>\n\t\t\t<td>94.35<\/td>\n\t\t<\/tr><tr><td>2B<\/td>\n\t\t\t<td>8.0.5<\/td>\n\t\t\t<td>7.0.4<\/td>\n\t\t\t<td>Standard profile, authenticated home<\/td>\n\t\t\t<td>8.61<\/td>\n\t\t<\/tr><\/tbody><\/table><p><strong>Benchmarks used<\/strong>:<\/p>\n\n<ul><li><code>$ wrk -t4 -c48 -d10 http:\/\/www.drupalpi.dev\/<\/code> (anonymous).<\/li>\n\t<li><code>$ ab -n 750 -c 10 -C \"SESSxyz=XYZ\" http:\/\/www.drupalpi.dev\/<\/code>\u00a0(authenticated as uid 1).<\/li>\n<\/ul><h2 id=\"mysql-benchmarks\">MySQL benchmarks<\/h2>\n\n<table><thead><tr><th>MySQL DB Location<\/th>\n\t\t\t<th>Type of test<\/th>\n\t\t\t<th>Extra info<\/th>\n\t\t\t<th>Time or Req\/s<\/th>\n\t\t<\/tr><\/thead><tbody><tr><td>OWC Envoy USB SSD<\/td>\n\t\t\t<td>DB export<\/td>\n\t\t\t<td>4.5 MB<\/td>\n\t\t\t<td>0:02<\/td>\n\t\t<\/tr><tr><td>OWC Envoy USB SSD<\/td>\n\t\t\t<td>DB import<\/td>\n\t\t\t<td>4.5 MB<\/td>\n\t\t\t<td>0:05<\/td>\n\t\t<\/tr><tr><td>SanDisk Ultra Fit USB<\/td>\n\t\t\t<td>DB export<\/td>\n\t\t\t<td>4.5 MB<\/td>\n\t\t\t<td>0:03<\/td>\n\t\t<\/tr><tr><td>SanDisk Ultra Fit USB<\/td>\n\t\t\t<td>DB import<\/td>\n\t\t\t<td>4.5 MB<\/td>\n\t\t\t<td>0:10<\/td>\n\t\t<\/tr><tr><td>SanDisk Extreme microSD<\/td>\n\t\t\t<td>DB export<\/td>\n\t\t\t<td>4.5 MB<\/td>\n\t\t\t<td>0:03<\/td>\n\t\t<\/tr><tr><td>SanDisk Extreme microSD<\/td>\n\t\t\t<td>DB import<\/td>\n\t\t\t<td>4.5 MB<\/td>\n\t\t\t<td>0:10<\/td>\n\t\t<\/tr><\/tbody><\/table><p>Importing and exporting databases aren't the most insane thing to attempt for MySQL benchmarking, but I was mostly trying to get a feel for any order-of-magnitude differences in disk I\/O with MySQL. I may run further database performance benchmarks at a later time to see how MySQL on the Pi handles different scenarios.<\/p>\n\n<h2 id=\"example-benchmarks\">Benchmark details<\/h2>\n\n<h3 id=\"cached-http-requests\">Cached HTTP requests<\/h3>\n\n<pre class=\"prettyprint\">\n<code class=\"hljs lasso\">wrk <span class=\"hljs-attribute\">-t4<\/span> <span class=\"hljs-attribute\">-c100<\/span> <span class=\"hljs-attribute\">-d30<\/span> http:<span class=\"hljs-comment\">\/\/www.pidramble.com\/<\/span>\nab <span class=\"hljs-attribute\">-n<\/span> <span class=\"hljs-number\">10000<\/span> <span class=\"hljs-attribute\">-c<\/span> <span class=\"hljs-number\">100<\/span> http:<span class=\"hljs-comment\">\/\/www.pidramble.com\/<\/span><\/code><\/pre>\n\n<p><strong>Rationale<\/strong>: Test the raw throughput of the Nginx reverse proxy. This test should only hit the first Pi, acting as a cache in front of the rest of the stack, and should just be a matter of Nginx serving as many requests per second as possible (typically 1,000+, but this depends mostly on the size of the page in question).<\/p>\n\n<p>This test does nothing to test the entire infrastructure, as, after the first request is cached by Nginx locally, all the rest of the requests are served from that local cache.<\/p>\n\n<p><strong>Current Bottleneck<\/strong>: Network I\/O. If you use a Gigabit adapter, you can push through as many requests\/sec that a ~200 Mbps connection can support. If you use the built-in Pi 2 LAN, you can get about 95 Mbps max.<\/p>\n\n<h3 id=\"uncached-http-requests\">Uncached HTTP requests<\/h3>\n\n<pre class=\"prettyprint\">\n<code class=\"hljs lasso\">wrk <span class=\"hljs-attribute\">-t4<\/span> <span class=\"hljs-attribute\">-c4<\/span> <span class=\"hljs-attribute\">-d10<\/span> http:<span class=\"hljs-comment\">\/\/pidramble.com\/?nocache=true<\/span>\nab <span class=\"hljs-attribute\">-n<\/span> <span class=\"hljs-number\">100<\/span> <span class=\"hljs-attribute\">-c<\/span> <span class=\"hljs-number\">10<\/span> http:<span class=\"hljs-comment\">\/\/pidramble.com\/?nocache=true<\/span><\/code><\/pre>\n\n<p><strong>Rationale<\/strong>: Test the full stack for typical uncached responses. Setting the URL parameter <code>nocache=true<\/code> flags the request as uncachable according to our Nginx proxy\/balancer configuration. Requests will be distributed to the backend webservers, which in turn will load some data from the MySQL database server.<\/p>\n\n<p><strong>Current Bottleneck<\/strong>: Pi 2 CPU (specifically PHP processes on the webservers). If you run this test, you\u2019ll notice that all the webserver Pis max out their CPU usage almost immediately. The other servers have a tiny bit of load, but nothing major. This is because Drupal 8 is (currently) a pretty CPU-heavy framework that requires a good deal of PHP processing for a standard request (even when using an opcode cache and retrieving data from Redis, which makes requests 10-15% faster than querying through MySQL).<\/p>\n\n<h3 id=\"authenticated-http-requests\">Authenticated HTTP requests<\/h3>\n\n<pre class=\"prettyprint\">\n<code class=\"hljs lasso\">ab <span class=\"hljs-attribute\">-n<\/span> <span class=\"hljs-number\">100<\/span> <span class=\"hljs-attribute\">-c<\/span> <span class=\"hljs-number\">10<\/span> <span class=\"hljs-attribute\">-C<\/span> <span class=\"hljs-string\">\"SESSxxxxxxxxxxx=xxxxxxxxxxxx\"<\/span> http:<span class=\"hljs-comment\">\/\/pidramble.com\/<\/span><\/code><\/pre>\n\n<p><strong>Rationale<\/strong>: This is the heaviest kind of request possible for a Drupal 8 site. Many sites don\u2019t have much authenticated traffic, but if your site does, every request goes through the full stack, and often results in some database writes, reads, potentially some caching layer updates, etc. In all my performance optimization, I was able to squeeze about 15-16 requests\/second with a 6 Pi cluster. This number should see a linear increase with the number of webservers added, until resource limits of the cache and database server are reached.<\/p>\n\n<p><strong>Current Bottleneck<\/strong>: CPU (see previous <em>Uncached HTTP requests<\/em> benchmark). However, depending on the modules enabled and functionality provided to authenticated users, the cache or database servers could see more activity. But that is not the current bottleneck with 6 Raspberry Pi 2 nodes.<\/p>\n",
            "summary": "",
            "lang": "en"
        }
    ]
}